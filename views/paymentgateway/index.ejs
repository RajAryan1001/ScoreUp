<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Preparation Payment</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <link rel="stylesheet" href="/css/Home.css">
    <style>
         

    /* Modern Payment Page CSS */
:root {
  --primary-color: #3F4154;
  --secondary-color: #ff6b35;
  --accent-color: #4cc9f0;
  --text-color: #333;
  --text-light: #666;
  --bg-color: #fff;
  --bg-light: #f8f9fa;
  --bg-dark: #343a40;
  --border-color: #e0e0e0;
  --success-color: #4caf50;
  --warning-color: #ff9800;
  --error-color: #ff6b35;
  --border-radius: 12px;
  --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  --font-primary: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--font-primary);
  color: var(--text-color);
  line-height: 1.6;
  background-color: #f5f7fa;
  background-image: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
  min-height: 100vh;
  padding: 40px 0;
}

/* Container and Layout */
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -15px;
}

.justify-content-center {
  justify-content: center;
}

.col-md-6, .col-md-8 {
  position: relative;
  width: 100%;
  padding: 0 15px;
}

@media (min-width: 768px) {
  .col-md-6 {
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-md-8 {
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
}

/* Card Styles */
.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border-radius: var(--border-radius);
  overflow: hidden;
  transition: var(--transition);
}

.shadow {
  box-shadow: var(--box-shadow);
}

.card-header {
  padding: 1.5rem;
  margin-bottom: 0;
  background-color: var(--primary-color);
  border-bottom: none;
  position: relative;
}

.card-header::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 6px;
  background: linear-gradient(90deg, var(--secondary-color) 0%, var(--accent-color) 100%);
}

.card-header h3 {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0;
  letter-spacing: -0.5px;
}

.text-white {
  color: #fff;
}

.text-center {
  text-align: center;
}

.mb-0 {
  margin-bottom: 0;
}

.card-body {
  flex: 1 1 auto;
  padding: 2rem;
}

/* Form Styles */
.form-label {
  display: block;
  margin-bottom: 0.75rem;
  font-weight: 500;
  color: var(--text-color);
  font-size: 0.95rem;
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.85rem 1.25rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--text-color);
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  transition: var(--transition);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.02);
}

.form-control:focus {
  color: var(--text-color);
  background-color: #fff;
  border-color: var(--primary-color);
  outline: 0;
  box-shadow: 0 0 0 3px rgba(63, 65, 84, 0.15);
}

.mb-3 {
  margin-bottom: 1.5rem;
}

h4 {
  font-size: 1.35rem;
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 1.25rem;
  position: relative;
  padding-bottom: 0.75rem;
}

h4::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 50px;
  height: 3px;
  background: var(--secondary-color);
  border-radius: 3px;
}

/* Course Card Styles */
.course-card {
  cursor: pointer;
  transition: var(--transition);
  border: 2px solid transparent;
  height: 100%;
  background-color: var(--bg-light);
  border-radius: var(--border-radius);
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.course-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(63, 65, 84, 0.05) 0%, rgba(255, 107, 53, 0.05) 100%);
  z-index: -1;
  opacity: 0;
  transition: var(--transition);
}

.course-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
  border-color: var(--primary-color);
}

.course-card:hover::before {
  opacity: 1;
}

.course-card.selected {
  border-color: var(--primary-color);
  background-color: rgba(63, 65, 84, 0.05);
  box-shadow: 0 10px 25px rgba(63, 65, 84, 0.15);
}

.course-card.selected::before {
  opacity: 1;
}

.course-card.selected::after {
  content: 'âœ“';
  position: absolute;
  top: 10px;
  right: 10px;
  width: 20px;
  height: 20px;
  background: var(--primary-color);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
}

.course-card h5 {
  font-size: 1.05rem;
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 0.75rem;
  transition: var(--transition);
}

.course-card p {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--primary-color);
  transition: var(--transition);
}

.p-3 {
  padding: 1.25rem;
}

/* Summary Card Styles */
.summary-card {
  background-color: #f8f9fa;
  background-image: linear-gradient(135deg, #f8f9fa 0%, #f1f3f5 100%);
  border-radius: var(--border-radius);
  border: 1px solid var(--border-color);
  padding: 1.75rem;
  margin-top: 1.75rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.03);
}

.mt-4 {
  margin-top: 2rem;
}

.p-4 {
  padding: 1.75rem;
}

.text-muted {
  color: var(--text-light);
  font-style: italic;
}

/* Button Styles */
.btn, #payButton {
  display: inline-block;
  font-weight: 600;
  line-height: 1.5;
  color: #fff;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: none;
  padding: 1rem 1.75rem;
  font-size: 1rem;
  border-radius: var(--border-radius);
  transition: var(--transition);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn-primary, #payButton {
  color: #fff;
  background-color: var(--secondary-color);
  box-shadow: 0 4px 15px rgba(255, 107, 53, 0.3);
}

.btn-primary::before, #payButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: var(--transition);
  z-index: -1;
}

.btn-primary:hover:not(:disabled)::before, #payButton:hover:not(:disabled)::before {
  left: 100%;
}

.btn-primary:hover:not(:disabled), #payButton:hover:not(:disabled) {
  color: #fff;
  background-color: #ff5a1f;
  transform: translateY(-3px);
  box-shadow: 0 10px 25px rgba(255, 107, 53, 0.4);
}

.btn-primary:disabled, #payButton:disabled {
  opacity: 0.65;
  cursor: not-allowed;
  background-color: #ffaa8c;
  box-shadow: none;
}

.w-100 {
  width: 100%;
}

.py-2 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

/* Order Summary Styles */
#orderSummary {
  margin-bottom: 1.5rem;
  transition: var(--transition);
}

#orderSummary.active {
  border-top: 1px solid rgba(0, 0, 0, 0.05);
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  padding: 1.25rem 0;
  margin: 1.25rem 0;
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 8px;
}

#orderSummary .summary-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.75rem;
  padding: 0.5rem 0;
  transition: var(--transition);
}

#orderSummary .summary-item:hover {
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 6px;
  padding: 0.5rem 0.75rem;
  margin: 0 -0.75rem 0.75rem -0.75rem;
}

#orderSummary .summary-item.total {
  font-weight: 700;
  font-size: 1.2rem;
  color: var(--primary-color);
  border-top: 2px dashed rgba(63, 65, 84, 0.1);
  padding-top: 0.75rem;
  margin-top: 0.75rem;
}

/* Responsive Adjustments */
@media (max-width: 767px) {
  .card-body {
    padding: 1.5rem;
  }
  
  .summary-card {
    padding: 1.25rem;
  }
  
  .course-card h5 {
    font-size: 0.95rem;
  }
  
  .course-card p {
    font-size: 1.1rem;
  }
  
  .card-header h3 {
    font-size: 1.5rem;
  }
}

/* Animation Effects */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.card {
  animation: fadeIn 0.6s ease-out;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--secondary-color);
}

/* Add JavaScript for interactivity */

    </style>
</head>
<body>

    <%- include('../partials/Header') %>
    <div class="container" style="margin-top: 40px;">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header text-white" style="background: #3F4154;">
                        <h3 class="text-center mb-0">Test Preparation Payment</h3>
                    </div>
                    <div class="card-body">
                        <form id="paymentForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Full Name</label>
                                        <input type="text" class="form-control" id="name" required>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Email</label>
                                        <input type="email" class="form-control" id="email" required>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Phone Number</label>
                                        <input type="tel" class="form-control" id="phone" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h4 class="mb-3">Select Your Test</h4>
                                    <div class="row">
                                        <% const courses = [
                                            { id: 'gre', name: 'GRE Preparation', price: 25000 },
                                            { id: 'gmat', name: 'GMAT Preparation', price: 30000 },
                                            { id: 'sat', name: 'SAT Preparation', price: 45000 },
                                            { id: 'ap', name: 'AP Preparation', price: 25000 },
                                            { id: 'act', name: 'ACT Preparation', price: 65000 },
                                            { id: 'igcse', name: 'IGCSE Preparation', price: 45000 },
                                            { id: 'pte', name: 'PTE Preparation', price: 29000 },
                                            { id: 'toefl', name: 'TOEFL Preparation', price: 35000 },
                                            { id: 'cbse', name: 'CBSE Preparation', price: 15000 }
                                        ]; %>
                                        
                                        <% courses.forEach(course => { %>
                                            <div class="col-md-6 mb-3">
                                                <div class="card course-card p-3" data-id="<%= course.id %>" 
                                                     data-name="<%= course.name %>" data-price="<%= course.price %>">
                                                    <h5><%= course.name %></h5>
                                                    <p class="mb-0">â‚¹<%= course.price.toLocaleString('en-IN') %></p>
                                                </div>
                                            </div>
                                        <% }); %>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="summary-card mt-4 p-4">
                                <h4 class="mb-3">Order Summary</h4>
                                <div id="orderSummary" class="mb-3">
                                    <p class="text-muted">Please select a test to see details</p>
                                </div>
                                <button type="button" class=" w-100 py-2" id="payButton" disabled style="background:  #ff6b35 ;">
                                    Proceed to Payment
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const courseCards = document.querySelectorAll('.course-card');
            const orderSummary = document.getElementById('orderSummary');
            const payButton = document.getElementById('payButton');
            const form = document.getElementById('paymentForm');
            
            let selectedCourse = null;
            
            // Course selection
            courseCards.forEach(card => {
                card.addEventListener('click', function() {
                    // Remove selected class from all cards
                    courseCards.forEach(c => c.classList.remove('selected'));
                    
                    // Add selected class to clicked card
                    this.classList.add('selected');
                    
                    // Set selected course
                    selectedCourse = {
                        id: this.dataset.id,
                        name: this.dataset.name,
                        price: parseInt(this.dataset.price)
                    };
                    
                    // Update order summary
                    orderSummary.innerHTML = `
                        <p><strong>Test:</strong> ${selectedCourse.name}</p>
                        <p><strong>Amount:</strong> â‚¹${selectedCourse.price.toLocaleString('en-IN')}</p>
                    `;
                    
                    // Enable pay button
                    payButton.disabled = false;
                });
            });
            
            // Payment handling
            payButton.addEventListener('click', async function(e) {
                e.preventDefault();
                
                if (!selectedCourse) {
                    alert('Please select a test preparation');
                    return;
                }
                
                const name = document.getElementById('name').value;
                const email = document.getElementById('email').value;
                const phone = document.getElementById('phone').value;
                
                if (!name || !email || !phone) {
                    alert('Please fill in all required fields');
                    return;
                }
                
                try {
                    // Create order on server
                    
                    const response = await fetch('/create-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body:JSON.stringify({
                            name,
                            email,
                            phone,
                            course: selectedCourse.name,
                            amount: selectedCourse.price
                        })
                    });
                    
                    const order = await response.json();
                    // Razorpay options
                    const options = {
                        key: '<%= razorpayKey %>', // Passed from server
                        amount: order.amount,
                        currency: 'INR',
                        name: 'Test Preparation',
                        description: selectedCourse.name,
                        order_id: order.id,
                        handler: function(response) {
                            window.location.href = `/payment-success?payment_id=${response.razorpay_payment_id}&order_id=${order.id}`;
                        },
                        prefill: {
                            name,
                            email,
                            contact: phone
                        },
                        theme: {
                            color: '#2965F1'
                        }
                    };
                    
                    const rzp = new Razorpay(options);
                    rzp.open();
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                }
            });
        });
    </script>
</body>
</html>